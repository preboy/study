
条件 or
$or: [{svr:"game15"}, {svr:"game16"} ],


// 设置mongdob shell 中find显示多少行
DBQuery.shellBatchSize=99999


mongodb更新方法：
find之后，拷贝到文本编辑器，然后修改数据，再update上去，注意update的filter

修改子表：
db.getCollection('union').update({_id:16777222}, {$set:{"union_boss.buff_idx":24}})

// 显示过滤
db.castle.find({}, {_id:1, user_id:1, "tile.country_id":1})

查找日志：秘银火枪图纸  通过扫荡
db.stat_bld.find({"action":"mould_got", "uid":"u6-1205732", "src":"msg.BabelChapterSweepRequest", "m_id":7000406}).pretty()
db.user.find({"server_name" : "game1", "bot":{$eq:null}}, {"name":1, "sdk":1})


---------------------------------- 一个例子 ----------------------------------
// lxq 查询
db.stat_pay.aggregate(
[
        {
		$match : {
                    amt: {$gt: 0},
                    $or: [{svr:"game15"}, {svr:"game17"}, {svr:"game18"}, {svr:"game19"}, {svr:"game20"}, {svr:"game21"}, {svr:"game22"}, {svr:"game23"}, {svr:"game24"}, {svr:"game25"}, {svr:"game26"}, {svr:"game27"}, {svr:"game28"}, {svr:"game29"}, {svr:"game30"}],
                },
	},

	{
	    $group: {
		_id:      "$userid",
		svr:      {$last: "$svr"},
		name:     {$last: "$name"},
		vip:      {$last: "$vip"},
		create_t: {$last: "$create_t"},
		curr:     {$last: "$currency"},
		pay_t:    {$max:  "$ts"},
		amount:   {$sum:  "$amt"},
		count:    {$sum:  "$cnt"},
	    },
	},

	{
		$sort: {
			amount: -1,
			pay_t:  -1,
			count:  1,
		},
	},

	{
	    $project: {
		_id:    1,
		svr:    1,
		name:   1,
		vip:    1,
		amount: 1,
		count:  1,
		curr:   1,
		create_t: 1,
		pay_t: 1,
	    },
	},
]);

----------------------------------

从文件中恢复文件到mongodb
mongoimport --db skyc --collection giftinfo < t.json




================================
CentOS 7 下配置文件的修改：

服务名是: mongod    #这个名字，搞得人猜了很久

/etc/mongodb.conf

[1]
...
# Where and how to store data.
storage:
  dbPath: /data/mongo-data          # 此处修改数据存在位置    先建好此目录，前chowm mongod:mongod   /data/mongo-data
  journal:
...


[2]
...
security:                       # 这一行要打开：且添加下一行
  authorization: enabled
...
 注意：
    在修改此处之前，登录进去，建立用户db.createUser({user:"mongodbuser", pwd:"mongodbuser", roles:["root"]})
    添加用户之后再修改配置文件，重启服务器
    测试

[3]
  wiredTiger:
    engineConfig:       # 此处要修改最大大小，防止占用过多（自己的机子上安装mongodb的话）
      cacheSizeGB: 1


[其它]
    修改 IP、端口



导出表：
mongodump -h 10.66.234.75 -u mongouser -p 'cfC1i21c43' --authenticationDatabase=admin -d mju -c user -q '{"base.svr": {$in: ["game1"]}, "_id":"u1-1000013"}' --gzip -o db_u1


导入表：
mongorestore  -h 192.168.0.200  --port 28001  --gzip   --authenticationDatabase admin   -d zcg_mju   db_u1/mju/


导出表：
mongoexport --host 172.16.0.15 -u mongouser -p PtnCASe3ev5xR38 --authenticationDatabase=admin -d mjc -c giftinfo --type=json -o ggg.csv
mongoimport --host 172.16.0.17 -u mongouser -p tanyh3421 --authenticationDatabase=admin -d mjc -c giftinfo --type=json --file ggg.csv

golang 使用 mongodb存储的时候，
如果是map，则map的key只能是string,  且 key中不能包含:
    Windows下：/ . " $ * < > : | ?
    Linux下：  / . " $


从mongodb中读取出来的数据，
slice:
    如果数据库中值为[] ，则读取出来的slice为非空，如果数据库中无该项，则为nil
    如果数据库中值为{} ，则读取出来的map为非空，  如果数据库中无该项，则为nil
    程序中值为nil的map或者slice，写入到数据库中，对应的项为{}或[], 下一次读取到程序中，就不为nil了


# shell中直接执行mongo语句，主要是为了打印出入方便重定向
mongo "mongodb://mongouser:7zfadonoh38n@172.29.0.36:27017/mjb?authSource=admin" --quiet  --eval 'db.order.find().limit(10).toArray().forEach( v=> { print(v.lv, v.first); })'


mongodb开启认证
vim /etc/mongo.conf
security:
  authorization: enabled #注意缩进，缩进参照配置文件其他配置。缩进错误可能第6步重启不成功。

创建用户 并拥有很大的权限
   use admin;

   db.createUser({
        user: "mongouser",
        pwd:  "mongopass",
        roles: [
            { role: "readWriteAnyDatabase", db: "admin" }
        ]
    })

    // 如果想建立一个万能的用户，则：  roles: [ "root" ]

然后可以连接
mongo mongodb://mongouser:mongopass@127.0.0.1/ --authenticationDatabase=admin
mongo -u mongouser -p mongopass


[mongodb-org-4.2]
name=MongoDB Repository
baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/development/x86_64/
gpgcheck=1
enabled=1
gpgkey=https://www.mongodb.org/static/pgp/server-4.2.asc
