====================================================================================
				Hole in working
====================================================================================

增加明日可获得奖励预览
奖励易毁掉玩法<刘安>
智能推荐助手：给出详情，引导充值
战斗：引导玩家看细节(注意英雄个性，增加培养兴趣)
每日迅速完成任务(今天我很忙，扫荡:获得基本奖励)、正常速度(有获得奖励暴率)
增加《楚留香》的每日剧情，吸引玩家留下来
不要让材料过剩


活动预热时间（活动还未正式开启），玩家就充了值，却未算计到了活动里面，这是个设计上的自找麻烦


p3问题：
	活动配置多条，第一项没有完成，则无法完成后面的
	从配置表读取项，然后注册成就事件，造成配置更新之后未注册新的配置


风云玩家：
	喜欢打怪暴装备，不单调


cocos2dx找不到资源，容易造成程序崩溃，搞死人

p7问题：
	奖励配置未好好检测，第5名比第3名要好
		应当形成一整套流程规范(策划不要老打游戏，又不做测试)


interface{} 的类型一定要注意,   一定要使用如下格式: v, ok := val.(int32) 


panic要及时通知开发人员：需要一种机制

panic的伤害降到最低化，事件机制


程序崩溃之后要看有什么其它影响
	不执行的代码会怎么办？  





CASE-1
php 中使用 mysql_pconnect(...) 失败，返回2003  Can't connect to Mysql on '...'
需要在shell下执行 setsebool httpd_can_network_connect 1
可能还是设置的问题，需要在哪儿搞个设置
好像是selinux的



CASE-2
// lua本身的问题，在台湾BIG5字符中，遇到\(0x5C)需要做特殊处理，做如下修改之后，lua的print不再有效果
static void read_string (LexState *ls, int del, SemInfo *seminfo) {
  save_and_next(ls);  /* keep delimiter (for error messages) */
  while (ls->current != del) {
    switch (ls->current) {
      case EOZ:
        lexerror(ls, "unfinished string", TK_EOS);
        break;  /* to avoid warnings */
      case '\n':
      case '\r':
        lexerror(ls, "unfinished string", TK_STRING);
        break;  /* to avoid warnings */
      case '\\': {  /* escape sequences */
        int c;  /* final character to be saved */
        // zcg debug
        unsigned char pp = *((char*)(ls->z->p) - 2);
        if (pp >= 0xA1 && pp <= 0xF9)
        {
            save_and_next(ls);
            continue;
        }
        // zcg debug end
        save_and_next(ls);  /* keep '\\' for error messages */
        switch (ls->current) {
          case 'a': c = '\a'; goto read_save;
          case 'b': c = '\b'; goto read_save;
          case 'f': c = '\f'; goto read_save;
          case 'n': c = '\n'; goto read_save;
          case 'r': c = '\r'; goto read_save;
          case 't': c = '\t'; goto read_save;
          case 'v': c = '\v'; goto read_save;
          case 'x': c = readhexaesc(ls); goto read_save;
          case 'u': utf8esc(ls);  goto no_save;
          case '\n': case '\r':
            inclinenumber(ls); c = '\n'; goto only_save;
          case '\\': case '\"': case '\'':
            c = ls->current; goto read_save;
          case EOZ: goto no_save;  /* will raise an error next loop */
          case 'z': {  /* zap following span of spaces */
            luaZ_buffremove(ls->buff, 1);  /* remove '\\' */
            next(ls);  /* skip the 'z' */
            while (lisspace(ls->current)) {
              if (currIsNewline(ls)) inclinenumber(ls);
              else next(ls);
            }
            goto no_save;
          }
          default: {
            esccheck(ls, lisdigit(ls->current), "invalid escape sequence");
            c = readdecesc(ls);  /* digital escape '\ddd' */
            goto only_save;
          }
        }
       read_save:
         next(ls);
         /* go through */
       only_save:
         luaZ_buffremove(ls->buff, 1);  /* remove '\\' */
         save(ls, c);
         /* go through */
       no_save: break;
      }
      default:
        save_and_next(ls);
    }
  }
  save_and_next(ls);  /* skip delimiter */
  seminfo->ts = luaX_newstring(ls, luaZ_buffer(ls->buff) + 1,
                                   luaZ_bufflen(ls->buff) - 2);
}



win7 远程桌面连接慢的问题
运行 gpedit.msc
计算机配置	管理模板	系统	inter通信管理，  在右侧选择 限制internet通信 启用，（一般局域网哈）


PHP配置REDIS
在centos 6 下安装好php-redis
在 /etc/php.ini 加入extension=redis.so  
sudo service php-fpm restart
查看phpinfo();中是否包含redis




备份PUTTY配置的方法
1. 开始->运行(Win+R)->regedit
2. 找到 HKEY_CURRENT_USER\Software\SimonTatham
3. 在 SimonTatham 这个节点上点击右键，选择导出，保存。
如果你想恢复配置信息，只需要双击保存的这个文件，导入注册表信息即可


这个网站，检测json正确性
https://jsonlint.com/






putty日志设置：

putty-&H-&Y&M&D-&T.log


# --------------------------- 测试传递多个参数 ---------------------------

function fn()
{
    echo "args=$*"

    while [ $# -ne 0 ]
    do
        echo "arg: $0 $1"
        shift
    done
}

echo -e "\e[1;31mcount of args: $#  \e[1;0m"
fn $*


# --------------------------- linux shell Array ---------------------------
declare -A SERVER

SERVER["game1"]="fuckyou 1"
SERVER["game2"]="fuckyou 2"
SERVER["game3"]="fuckyou 3"
SERVER["game4"]="fuckyou 4"
SERVER["game5"]="fuckyou 5"
SERVER["game6"]="fuckyou 6"
SERVER["game6"]="fuckyou 7"

echo "${SERVER[*]}"

for val in "${!SERVER[@]}"; do
    echo "key-val: $val ${SERVER[$val]}"
done


# -------------------------- console.log 输出加日期 ----------------------------

let util = require("util")

 Date.prototype.toZCG = function() {
    return util.format("<%d-%d-%d %d:%d:%d >|", 1900+this.getYear(), this.getMonth(), this.getDay(), this.getHours(), this.getMinutes(), this.getSeconds())
}

console.log_ = console.log

console.log = function(...a){
    let str = new Date().toZCG()
    console.log_(str, ...a) 
}



// =====================================================================
//                     nodejs reload js & json module
// =====================================================================

var global_config = {}
files = ["m.js", "m1.js", "j.json", "j1.json"]

function load_config(){
    Object.keys(require.cache).forEach( k => { delete require.cache[k] } )        
    Object.keys(global_config).forEach( k => { delete global_config[k] } )    
    files.forEach( file => {
        global_config[file] = require("./" + file)
    })
}

load_config()
load_config()

console.log(global_config)



// =====================================================================
//                   shell 删除过期的文件(今天0点以前)
// =====================================================================
#!/bin/sh

today_morning=`date  +"%Y-%m-%d"`
today_morning_sec=`date +%s -d $today_morning`

for f in $(ls *.txt)
do
    last_modification=$(stat -c %Y $f)
    tail=""
    if [ $last_modification -lt $today_morning_sec ];then
        tail="DELETE"
        if [ "$1" = "purge" ];then
            rm $f
        fi
    fi
    printf "%-30s %-12s %s\n" $f $last_modification $tail
done

说明:
printf中的%-30s，表示宽度、对齐方式